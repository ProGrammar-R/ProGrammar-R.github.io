importScripts('https://cdnjs.cloudflare.com/ajax/libs/seedrandom/3.0.1/seedrandom.min.js')
importScripts('https://cdnjs.cloudflare.com/ajax/libs/sjcl/1.0.8/sjcl.min.js')
importScripts("constants.js")
importScripts("fields.js")
importScripts("util.js")
importScripts("traps.js")
importScripts("text.js")
importScripts("items.js")
importScripts("monsters.js")
importScripts("presets/safe.js")
importScripts("presets/secondTower.js")
importScripts("presets/secondTowerRun.js")
importScripts("presets/tournament.js")
importScripts("ecc-edc-recalc-js/index.js")
importScripts("customFloor/pack.js")

const VER_ERROR = 'Seed generated by a different version of the randomizer.'

self.addEventListener('message', function(message) {
  try {
    const data = message.data
    const fileData = data.fileData
    const array = new Uint8Array(fileData)
    const check = new adRando.util.checked(array)
    Math.seedrandom(adRando.util.saltSeed(
      data.version,
      data.options,
      data.seed,
    ))
    const options = self.adRando.util.Preset.options(data.options)
    let hex = adRando.util.setSeedAzureDreams(check, options, data.seed, data.userSeed)
    adRando.text.embedSeedAndFlagsInAngelText(check, options, data.seed)
    adRando.traps.setTraps(check, options)
    //adRando.util.pauseAfterDeath(check)
    //adRando.text.writeBattleTextToFile(check, adRando.constants.romAddresses.isExhaustedBattleText, "collapsed.\\p\\0")
    adRando.monsters.setEnemizer(options, check, hex)
    adRando.items.setStartingItems(options, check, hex)
    adRando.util.setAppliedOptions(options, check, hex)
    if (!!message.data.customFloor) {
      const exportBytes = adRando.pack.writeFloor(message.data.customFloor);
      check.writeSectors(parseInt(message.data.customFloor.firstSector), message.data.customFloor.sizeInSectors, exportBytes.data)
    }
    const checksum = check.sum()
    if (data.checksum && data.checksum !== checksum) {
      throw new Error(VER_ERROR)
    }
    eccEdcCalc(array)
    self.postMessage({
      seed: data.seed,
      data: fileData,
      checksum: checksum,
      info: data.info,
      userSeed: data.userSeed,
    }, [fileData])
  } catch (e) {
    self.postMessage({error: e.message})
  }
})
